/* src/pages/HomePage.css */

.homepage-container {
    display: flex;
    height: 100%;
    /* 设置Flexbox布局 */
}

/* 搜索框样式 */
.search-box {
    margin: 20px;
    /* 为搜索框留出一些外边距 */
    padding: 10px;
    /* 设置内边距，使得输入时有足够空间 */
    background-color: #333;
    /* 设置输入框背景色与侧边栏一致 */
    border: 1px solid #444;
    /* 设置边框颜色稍微亮一点，增加对比 */
    border-radius: 20px;
    /* 设置圆角，使其成为长椭圆形 */
    color: #ddd;
    /* 设置字体颜色 */
}

.search-box:focus {
    outline: none;
    /* 去除聚焦时的默认外轮廓线 */
    border-color: #555;
    /* 聚焦时边框颜色变化，增加互动效果 */
    background-color: #3b3b3b;
    /* 聚焦时背景颜色变深 */
}

.search-box::placeholder {
    color: #555;
    /* 设置占位符文字颜色 */
}

.search-box:hover {
    background-color: #3b3b3b;
    /* 悬浮时的背景色变化，为了一致性，可与聚焦时背景色一致 */
    border-color: #555;
    /* 悬浮时边框颜色变化 */
    /* 可以添加动画效果，如边框渐变、阴影等 */
}

/* 搜索框外围的表单样式调整，以实现搜索框与按钮的内联显示，并调整间距 */
.form-search {
    display: flex;
    /* 使用Flex布局，使输入框和按钮并排显示 */
    justify-content: center;
    /* 使内容居中显示，根据需要调整 */
    align-items: center;
    /* 垂直方向居中对齐 */
    margin: 20px;
    /* 与搜索框相匹配的边距 */
}

/* 搜索按钮样式 */
.search-btn {
    display: inline-block;
    /* 或者使用 block，视具体布局情况而定 */
    min-width: 80px;
    /* 根据实际情况调整 */
    font-size: 14px;
    /* 根据按钮大小适当调整字体大小 */
    padding: 10px 20px;
    /* 按钮内边距，根据需求调整 */
    margin-left: 5px;
    /* 与搜索框的间距 */
    background-color: #444;
    /* 按钮背景色，以与搜索框保持一致 */
    border: none;
    /* 去除默认边框 */
    border-radius: 20px;
    /* 圆角 */
    color: #ddd;
    /* 字体颜色 */
    cursor: pointer;
    /* 显示手型指针 */
    transition: background-color 0.3s, color 0.3s;
    /* 过渡动画 */
}

.search-btn:hover {
    background-color: #555;
    /* 悬浮时背景颜色变化，以便与搜索框协调 */
    color: #fff;
    /* 悬浮时字体颜色 */
}

.search-btn:active {
    transform: scale(0.98);
    /* 点击时的按下效果，轻微缩小，增加反馈感 */
}

.loading-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 200px;
    /* 根据实际情况调整，确保它在空白处占据足够的空间 */
    font-size: 20px;
    color: #555;
}


.side-menu {
    flex: 0 0 250px;
    /* 设置边栏宽度，并不允许它随内容变化而变化 */
    background-color: #333;
    /* 举例深色背景 */
    color: #fff;
    /* 文字颜色 */
    /* 其他样式 */
}

/* 假设你想为包含菜单的整个块设置背景色 */
.menu-list {
    background-color: #333;
    /* 深色背景 */
}

.category-title {
    color: #fff;
    /* 类别标题颜色，如果你希望它有好的对比度 */
    transition: background-color 0.3s ease, color 0.3s ease;
    /* 添加动画效果，持续时间为0.3秒并有ease效果 */
    cursor: pointer;
    /* 鼠标悬停时显示手形指针 */
}

.category-title:hover {
    background-color: #444;
    /* 悬停状态的背景色改变，与之前在 .subcategory-item 中定义的保持一致 */
    color: #ddd;
    /* 悬停状态的文字颜色改变，可以根据需要进行调整以提高对比度 */
}

/* 菜单子分类项的样式 */
.subcategory-item {
    list-style: none;
    /* 去除列表默认样式 */
    padding: 10px;
    /* 留出一些内边距 */
    color: #fff;
    /* 文字颜色 */
    cursor: pointer;
    /* 鼠标悬停时显示指针，表明可点击 */
}

.subcategory-item:hover {
    background-color: #444;
    /* 悬浮时的背景色变化 */
}





.content {
    flex: 1;
    background-color: #f0f0f0;
    /* 举例浅色背景 */
    padding: 20px;
    /* 或根据您的设计来设置适当的内边距 */
    /* 其他样式 */
}

/* 为电影列表和单个电影项设置Flexbox布局 */
.movies-list {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    /* 设置两个电影之间的间隙，根据需要调整 */
    align-items: center;
    /* 确保电影项在垂直方向上的居中 */
    /* justify-content: center; */
    /* 在有多余空间时，保持水平居中 */
    justify-content: start;
    /* 确保多行排列时左对齐 */
}

.movie-item {
    flex: 0 1 calc(33.333% - 20px);
    /* 一行显示3个电影项，减去的20px是为了考虑间隙的空间 */
}

.movie-item h3 {
    font-size: 1rem;
    /* 根据需求调整标题大小 */
    margin: 0.5em 0 0.5em;
    /* 为标题和图片之间添加适当的间距 */
    color: #333;
    /* 根据背景颜色调整字体颜色以保证可读性 */
    text-align: center;
    /* 将标题居中对齐 */
}

@media (max-width: 768px) {
    .movie-item {
        flex: 1 0 100%;
        /* 小屏幕下每个电影项占满整行 */
    }
}

/* 调整电影图片的样式 */
.movie-item img {
    width: 100%;
    /* 图片占满整个电影项 */
    height: auto;
    /* 高度自适应 */
    display: block;
    /* 防止图片下方出现间隙 */
    margin-bottom: 1em;
    /* 为图片和标题之间添加一些间隔 */
}

.movies-list,
.loading-container {
    transition: opacity 0.5s ease-out, visibility 0s linear 0.5s;
    opacity: 0;
    visibility: hidden;
    /* 初始时不可见 */
}

.movies-list.show,
.loading-container.show {
    opacity: 1;
    visibility: visible;
    transition-delay: 0s;
    /* 立即变为可见 */
}